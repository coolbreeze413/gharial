name: docker-image-on-release
on:
  release:
    types:
      - published

env:
  IMAGE_NAME: gharial

jobs:
  docker-image:
    name: docker-image-on-release-job
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:

    - uses: actions/checkout@v2

    - name: dump-gh-context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    # - name: build-image
    #   run:  |
    #     docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

    # - name: login-ghcr-io
    #   run:  |
    #     run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # - name: push-image-ghcr-io
    #   run:  |
        
    #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

    #     # Change all uppercase to lowercase
    #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        
    #     # Strip git ref prefix from version
    #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        
    #     # Strip "v" prefix from tag name
    #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
    #     # Use Docker `latest` tag convention
    #     [ "$VERSION" == "master" ] && VERSION=latest
        
    #     echo IMAGE_ID=$IMAGE_ID
    #     echo VERSION=$VERSION
        
    #     docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        
    #     docker push $IMAGE_ID:$VERSION


