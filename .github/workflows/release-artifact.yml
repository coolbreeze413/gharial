name: release-artifact-on-pr

on:
  - pull_request

jobs:

  release:
    
    name: release-artifact-job
    
    runs-on: ubuntu-20.04

    env:
      IS_ARTIFACTS_CHANGED: "no"
    
    steps:

      - name: check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # we need all history, not a shallow clone for the next step

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: get changed files
        run:  |
          echo "before: ${{ github.event.pull_request.base.sha }}"
          echo "after: ${{ github.event.pull_request.head.sha }}"
          echo "CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

      - name: list changed files
        run:  |
          echo "changed files:"
          echo ${{ env.CHANGED_FILES }}
      
      # we know that ARTIFACTS_CHANGES will have a single file like: "artifacts/gharial_artifact_21_Dec_2021_04_43_56.sh"      
      - name: get changed files in a specific directory
        run:  |
          echo "ARTIFACTS_CHANGES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- artifacts)" >> $GITHUB_ENV
          echo "IS_ARTIFACTS_CHANGED=$(git diff --quiet ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- artifacts || echo yes)" >> $GITHUB_ENV
          

      - name: list changed files in a specific directory
        run:  |
          echo "changed files:"
          echo ${{ env.ARTIFACTS_CHANGES }}
          echo ""
          echo "are-there-changes-in-artifacts: ${{ env.IS_ARTIFACTS_CHANGED }}"

      - name: merge the PR if there are artifact changes
        if: ${{ env.ARTIFACTS_CHANGES }} == "yes"
        shell: bash
        run:  |
          echo "artifact has changes, merge the PR."
          MERGE_BODY="[GHARIAL-GHA] automatically merging latest PR for artifact"
          echo "MERGE_BODY=$MERGE_BODY"
          PR_URL=${{ github.event.pull_request.html_url }}
          echo "PR_URL=$PR_URL"
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          gh pr merge $PR_URL --auto --delete-branch --squash --body "$MERGE_BODY"

